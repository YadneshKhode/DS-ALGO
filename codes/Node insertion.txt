public class Solution {
	public static void main(String args[]) {
		LinkedList llist = new LinkedList();
  
        // Insert 6.  So linked list becomes 6->NUllist
        llist.append(6);
  
        // Insert 7 at the beginning. So linked list becomes
        // 7->6->NUllist
        llist.pushAtFront(7);
  
        // Insert 1 at the beginning. So linked list becomes
        // 1->7->6->NUllist
        llist.pushAtFront(1);
  
        // Insert 4 at the end. So linked list becomes
        // 1->7->6->4->NUllist
        llist.append(4);
  
        // Insert 8, after 7. So linked list becomes
        // 1->7->8->6->4->NUllist
        llist.pushAfterNode(llist.head.next, 8);
  
        System.out.println("\nCreated Linked list is: ");
        llist.printList();
	}
}

class LinkedList {
	Node head;

	class Node {
		int data;
		Node next;

		Node(int d) {
			data = d;
			next = null;
		}
	}

	public void pushAtFront(int data) {
		Node new_node = new Node(data);
		new_node.next = head;
		head = new_node;
	}

	public void pushAfterNode(Node prev_node, int data) {
		Node new_node = new Node(data);
		new_node.next = prev_node.next;
		prev_node.next = new_node;

	}
	public void append(int new_data)
    {
        /* 1. Allocate the Node &
           2. Put in the data
           3. Set next as null */
        Node new_node = new Node(new_data);
  
        /* 4. If the Linked List is empty, then make the
              new node as head */
        if (head == null)
        {
            head = new Node(new_data);
            return;
        }
  
        /* 4. This new node is going to be the last node, so
              make next of it as null */
        new_node.next = null;
  
        /* 5. Else traverse till the last node */
        Node last = head; 
        while (last.next != null)
            last = last.next;
  
        /* 6. Change the next of last node */
        last.next = new_node;
        return;
    }
	public void printList()
    {
        Node tnode = head;
        while (tnode != null)
        {
            System.out.print(tnode.data+" ");
            tnode = tnode.next;
        }
    }
}
