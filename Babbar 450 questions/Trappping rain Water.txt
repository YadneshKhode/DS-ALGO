https://practice.geeksforgeeks.org/problems/trapping-rain-water-1587115621/1
class Solution{
    
    // arr: input array
    // n: size of array
    // Function to find the trapped water between the blocks.
    static int trappingWater(int arr[], int n) { 
        
        // Your code here
        int sum = 0;
        
        int [] left = new int [n];
        int [] right = new int [n];
        
        int max = Integer.MIN_VALUE;
        
        for(int i =0;i <n;i++){
            if(arr[i] > max){
                max = arr[i];
            }
            left[i] = max;
        }
        //arr =  {8 8 2 4 5 5 1}  
        //left = {8,8,8,8,8,8,8}
        //right= {8,8,5,5,5,5,1}
        max = -1;
        for(int i =n-1;i >=0;i--){
            if(arr[i] > max){
                max = arr[i];
            }
            right[i] = max;
        }
        
       
        for(int i =0;i<n;i++){
            // System.out.println("sum  = "+sum);
            // System.out.println("left  = "+left[i]);
            // System.out.println("right  = "+right[i]);
            // System.out.println("arr  = "+arr[i]);
            sum = sum + Math.min(left[i],right[i]) - arr[i]; // 3+1+0+0+0
        }
        return sum;
    } 
}
