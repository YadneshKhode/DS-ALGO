static int fastPower(int a, int b){

int res = 1;

while(b > 0) {
	if( (b&1) != 0) res = (res * a) ;
	a = a * a;
	b = b >> 1;
}

}

// a ^ b = (a ^ 2) ^ (b / 2); when b is even
// a ^ b = a * (a ^ (b - 1)); b is odd
// for eg :
// 3 ^ 5 = 3 * (3 ^ 4) here b = 5 which is odd
// 5 ^ 4 = (5 ^ 2) ^ (4 / 2) = (5 * 5) ^ 2; here b = 4 which is even 
  



when ans is asked in % n ( for eg return ans % 10^9 +7)

static long fastPower(int a, int b){

long res = 1;

while(b > 0) {
	if( (b&1) != 0) res = (res % n * a % n) % n ;
	a = (a % n * a % n) % n;
	b = b >> 1;
}

}