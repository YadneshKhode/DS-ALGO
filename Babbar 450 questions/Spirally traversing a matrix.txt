class Solution
{
    //Function to return a list of integers denoting spiral traversal of matrix.
    static ArrayList<Integer> spirallyTraverse(int matrix[][], int r, int c)
    {
        ArrayList<Integer> al = new ArrayList<>();
        
        int top = 0, left = 0, down = r-1, right = c-1;
        while(top <= down && left <= right){
            for(int i = left; i<=right;i++){
                al.add(matrix[top][i]);
            }
            top++;
            for(int i = top; i<=down;i++){
                al.add(matrix[i][right]);
            }
            right--;
            for(int i = right; i>=left;i--){
                al.add(matrix[down][i]);
            }
            down--;
            for(int i = down; i>=top;i--){
                al.add(matrix[i][left]);
            }
            left++;
        }
     return al;   
    }
}
/*

# code here 
        top=0
        left=0
        dirc=0
        down,right=len(a)-1,len(a[0])-1
        result=[]
        while(top<=down and left<=right):
            if dirc==0:
                for i in range(left,right+1):
                   result.append(a[top][i])
                top+=1
            elif dirc==1:
                for i in range(top,down+1):
                    result.append(a[i][right])
                right-=1
            elif dirc==2:
                for i in range(right,left-1,-1):
                    result.append(a[down][i])
                down-=1
            elif dirc==3:
                for i in range(down,top-1,-1):
                    result.append(a[i][left])
                left+=1
            dirc=(dirc+1)%4
        return result



while ( top < down || left <  right )
1.Print left to right & top++
2.Print top to down & right--
3.Print right to left & down--
4.Print down to top &  left++
*/