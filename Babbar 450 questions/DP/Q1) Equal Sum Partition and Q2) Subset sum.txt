
class Solution{
    static int equalPartition(int N, int arr[])
    {
        // code here
        int sum = 0;
        boolean ans = false;
        for(int i = 0;i<N;i++){
            sum += arr[i];
        }
        if((sum & 1) != 0){
            return 0;
        }
        else{
            ans = isSubsetSum(N,arr,(sum >> 1));
        }
        return ans ? 1 : 0;
    }
    static Boolean isSubsetSum(int N, int arr[], int sum){
          boolean [][] dp = new boolean[N+1][sum+1]; 
          for(int j = 0;j<=sum;j++){
           dp[0][j] = false;
         }
         
         for(int i = 0;i<=N;i++){
             dp[i][0] = true;
         }
        // code here
        for(int i = 1; i <= N; i++){
            for(int j = 1; j<= sum; j++){
                if(j >= arr[i-1]){
                    dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }
                else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[N][sum];
    }
}

    0 1 2 3 SUM
0   T F F F
1   T
2   T
N   T