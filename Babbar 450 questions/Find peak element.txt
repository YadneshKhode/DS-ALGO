https://leetcode.com/problems/find-peak-element/

class Solution {
    public int findPeakElement(int[] nums) {
    int left = 0;
    int right = nums.length - 1;
    while(left < right) {
        int mid = left + (right - left) / 2;
        if(nums[mid] < nums[mid + 1]) {
            left = mid + 1;
        } else {
            right = mid;
        }
    }
    return left;
}
}


PEAK element in 2D array

https://www.youtube.com/watch?v=HtSuA80QTyo

Pick middle column j = m /2
find global max on column j at (i,j)
compare i,j-1 and i,j and i,j+1
pick left column if i,j-1  > i,j and right column if  i,j+1  > i,j
If (i,j) >= (i,j-1) ,(i,j+1) then i,j is a 2D peak
Solve the new problem with half the number of columns
when you have single column find global max


