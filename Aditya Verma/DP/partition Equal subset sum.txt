https://practice.geeksforgeeks.org/problems/subset-sum-problem2014/1#

class Solution{
    static int equalPartition(int N, int arr[])
    {
       int sum = 0;
       for(int i = 0; i < arr.length; i++){
           sum += arr[i];
       }
       
       if((sum & 1) != 0) return 0;
       return subset(N,arr,sum >> 1) ? 1 : 0;
       
    }
    
    static Boolean subset(int n, int []arr, int sum){
        Boolean dp[][] = new Boolean[n+1][sum+1];
        for(int i = 0; i < sum + 1; i++){
            dp[0][i] = false;
        }
        for(int i = 0; i < n + 1; i++){
            dp[i][0] = true;;
        }
        
        for(int i = 1; i < n + 1; i++){
            for(int j = 1; j < sum + 1; j++){
                if(arr[i-1] <= j){
                    dp[i][j] = dp[i-1][j - arr[i-1]] || dp[i-1][j];
                }
                else{
                     dp[i][j] = dp[i-1][j];
                }
            }
        }
        return dp[n][sum];
    }  
}